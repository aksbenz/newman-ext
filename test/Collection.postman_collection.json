{
	"variables": [],
	"info": {
		"name": "Collection",
		"_postman_id": "de2bce9c-0c70-3c1f-d0b0-d86894f3842b",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Folder1",
			"description": "",
			"item": [
				{
					"name": "Folder1_1",
					"description": "",
					"item": [
						{
							"name": "Folder1_1_1",
							"description": "",
							"item": [
								{
									"name": "Current UTC time copy copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"type": "text/javascript",
												"exec": [
													"tests[\"Status code is 200\"] = responseCode.code === 200;",
													"tests[\"Time is in a valid format\"] = responseBody === postman.getResponseHeader(\"date\");",
													""
												]
											}
										}
									],
									"request": {
										"url": "https://postman-echo.com/time/now",
										"method": "GET",
										"header": [],
										"body": {},
										"description": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```"
									},
									"response": [
										{
											"id": "de783318-d71e-4e16-b2cc-a9c437fe50c0",
											"name": "time as text",
											"originalRequest": {
												"url": "https://postman-echo.com/time/now",
												"method": "GET",
												"header": [],
												"body": {}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "html",
											"_postman_previewtype": "text",
											"header": [
												{
													"description": "",
													"key": "Access-Control-Allow-Credentials",
													"name": "Access-Control-Allow-Credentials",
													"value": ""
												},
												{
													"description": "",
													"key": "Access-Control-Allow-Headers",
													"name": "Access-Control-Allow-Headers",
													"value": ""
												},
												{
													"description": "",
													"key": "Access-Control-Allow-Methods",
													"name": "Access-Control-Allow-Methods",
													"value": ""
												},
												{
													"description": "",
													"key": "Access-Control-Allow-Origin",
													"name": "Access-Control-Allow-Origin",
													"value": ""
												},
												{
													"description": "",
													"key": "Access-Control-Expose-Headers",
													"name": "Access-Control-Expose-Headers",
													"value": ""
												},
												{
													"description": "",
													"key": "Connection",
													"name": "Connection",
													"value": "keep-alive"
												},
												{
													"description": "",
													"key": "Content-Encoding",
													"name": "Content-Encoding",
													"value": "gzip"
												},
												{
													"description": "",
													"key": "Content-Length",
													"name": "Content-Length",
													"value": "49"
												},
												{
													"description": "",
													"key": "Content-Type",
													"name": "Content-Type",
													"value": "text/html; charset=utf-8"
												},
												{
													"description": "",
													"key": "Date",
													"name": "Date",
													"value": "Wed, 11 Jan 2017 10:27:12 GMT"
												},
												{
													"description": "",
													"key": "ETag",
													"name": "ETag",
													"value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
												},
												{
													"description": "",
													"key": "Server",
													"name": "Server",
													"value": "nginx/1.10.1"
												},
												{
													"description": "",
													"key": "Vary",
													"name": "Vary",
													"value": "Accept-Encoding"
												},
												{
													"description": "",
													"key": "set-cookie",
													"name": "set-cookie",
													"value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
												}
											],
											"cookie": [
												{
													"expires": "Tue Jan 19 2038 08:44:07 GMT+1100 (AUS Eastern Daylight Time)",
													"httpOnly": true,
													"domain": "postman-echo.com",
													"path": "/",
													"secure": false,
													"value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig",
													"key": "sails.sid"
												}
											],
											"responseTime": "749",
											"body": "Wed, 11 Jan 2017 10:27:12 GMT"
										}
									]
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "Current UTC time copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Time is in a valid format\"] = responseBody === postman.getResponseHeader(\"date\");",
											""
										]
									}
								}
							],
							"request": {
								"url": "https://postman-echo.com/time/now",
								"method": "GET",
								"header": [],
								"body": {},
								"description": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```"
							},
							"response": [
								{
									"id": "8fc53f86-785e-4419-b728-f98afdf346d2",
									"name": "time as text",
									"originalRequest": {
										"url": "https://postman-echo.com/time/now",
										"method": "GET",
										"header": [],
										"body": {}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "html",
									"_postman_previewtype": "text",
									"header": [
										{
											"description": "",
											"key": "Access-Control-Allow-Credentials",
											"name": "Access-Control-Allow-Credentials",
											"value": ""
										},
										{
											"description": "",
											"key": "Access-Control-Allow-Headers",
											"name": "Access-Control-Allow-Headers",
											"value": ""
										},
										{
											"description": "",
											"key": "Access-Control-Allow-Methods",
											"name": "Access-Control-Allow-Methods",
											"value": ""
										},
										{
											"description": "",
											"key": "Access-Control-Allow-Origin",
											"name": "Access-Control-Allow-Origin",
											"value": ""
										},
										{
											"description": "",
											"key": "Access-Control-Expose-Headers",
											"name": "Access-Control-Expose-Headers",
											"value": ""
										},
										{
											"description": "",
											"key": "Connection",
											"name": "Connection",
											"value": "keep-alive"
										},
										{
											"description": "",
											"key": "Content-Encoding",
											"name": "Content-Encoding",
											"value": "gzip"
										},
										{
											"description": "",
											"key": "Content-Length",
											"name": "Content-Length",
											"value": "49"
										},
										{
											"description": "",
											"key": "Content-Type",
											"name": "Content-Type",
											"value": "text/html; charset=utf-8"
										},
										{
											"description": "",
											"key": "Date",
											"name": "Date",
											"value": "Wed, 11 Jan 2017 10:27:12 GMT"
										},
										{
											"description": "",
											"key": "ETag",
											"name": "ETag",
											"value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
										},
										{
											"description": "",
											"key": "Server",
											"name": "Server",
											"value": "nginx/1.10.1"
										},
										{
											"description": "",
											"key": "Vary",
											"name": "Vary",
											"value": "Accept-Encoding"
										},
										{
											"description": "",
											"key": "set-cookie",
											"name": "set-cookie",
											"value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
										}
									],
									"cookie": [
										{
											"expires": "Tue Jan 19 2038 08:44:07 GMT+1100 (AUS Eastern Daylight Time)",
											"httpOnly": true,
											"domain": "postman-echo.com",
											"path": "/",
											"secure": false,
											"value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig",
											"key": "sails.sid"
										}
									],
									"responseTime": "749",
									"body": "Wed, 11 Jan 2017 10:27:12 GMT"
								}
							]
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "IP address in JSON format copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Valid response structure\"] = /^[a-fA-F:\\.0-9]+$/.test(body.ip);"
								]
							}
						}
					],
					"request": {
						"url": "https://postman-echo.com/ip",
						"method": "GET",
						"header": [],
						"body": {},
						"description": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```"
					},
					"response": []
				}
			]
		},
		{
			"name": "Folder2",
			"description": "",
			"item": [
				{
					"name": "GET Request copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"tests['response json contains headers'] = _.has(responseJSON, 'headers');",
									"tests['response json contains args'] = _.has(responseJSON, 'args');",
									"tests['response json contains url'] = _.has(responseJSON, 'url');",
									"",
									"tests['args key contains argument passed as url parameter'] = ('test' in responseJSON.args);",
									"tests['args passed via request url params has value \"123\"'] = (_.get(responseJSON, 'args.test') === \"123\");"
								]
							}
						}
					],
					"request": {
						"url": {
							"raw": "https://postman-echo.com/get?test=123",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"get"
							],
							"query": [
								{
									"description": "",
									"equals": true,
									"key": "test",
									"value": "123"
								}
							],
							"variable": []
						},
						"method": "GET",
						"header": [],
						"body": {},
						"description": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested."
					},
					"response": []
				}
			]
		},
		{
			"name": "Folder3",
			"description": "",
			"item": [
				{
					"name": "Folder1_1",
					"description": "",
					"item": [
						{
							"name": "Leap year check copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"tests[\"Status code is 200\"] = responseCode.code === 200;",
											"tests[\"Comparsion was correct\"] = JSON.parse(responseBody).leap === true;"
										]
									}
								}
							],
							"request": {
								"url": {
									"raw": "https://postman-echo.com/time/leap?timestamp=2016-10-10",
									"protocol": "https",
									"host": [
										"postman-echo",
										"com"
									],
									"path": [
										"time",
										"leap"
									],
									"query": [
										{
											"description": "",
											"equals": true,
											"key": "timestamp",
											"value": "2016-10-10"
										}
									],
									"variable": []
								},
								"method": "GET",
								"header": [],
								"body": {},
								"description": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```"
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "POST Form Data copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'form');",
									"tests['response matches the data posted'] = (responseJSON.form && responseJSON.form.strange === 'boom');"
								]
							}
						}
					],
					"request": {
						"url": "https://postman-echo.com/post",
						"method": "POST",
						"header": [
							{
								"description": "",
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "strange",
									"type": "text",
									"value": "boom"
								}
							]
						},
						"description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter."
					},
					"response": []
				}
			]
		}
	]
}